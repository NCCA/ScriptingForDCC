import hou
# get the file to save to
########################################################################################################################
##  @brief a basic function to return a file name / absolute path stripping off $HIP etc
##      @param[in] _title the title to be displayed in the file box
##  @param[in] _wildCard the file selection wildcard i.e. *.obj etc
##  @param[in] _fileType the houdini file type option e.g. hou.fileType.Any
##  @returns a fully qualified file path or None
########################################################################################################################

def GetAbsoluteFileName(_title,_wildCard,_fileType) :
	# launch a file select and get the data
	file=hou.ui.selectFile(None,"Select File To Save",False,_fileType,"*.py","",False,False,hou.fileChooserMode.Write)
	# if it was empty bomb out and return none
	if file =="" :
		return None
	else :
		# so we got some data we need to split it as we could have $JOB $HIP or $HOME prepended
		# to it  if we partition based on the / we get a tuple with "", "/","/....." where the
		# first element is going to be an environment var etc.
		file=file.partition("/")
		# we have $HOME so extract the full $HOME path and use it
		if file[0]=="$HOME" :
			prefix=str(hou.getenv("HOME"))
		elif file[0] == "$HIP" :
		#we have $HIP so extract the full $HIP path
			prefix=str(hou.getenv("HIP"))
		# we have a $JOB so extract the full $JOB path
		elif file[0] == "$JOB" :
			prefix=str(hou.getenv("JOB"))
		# nothing so just blank the string
		else :
			prefix=str("")
		#now construct our new file name from the elements we've found
		return "%s/%s" %(prefix,file[2])

file=GetAbsoluteFileName("Enter File to Save ","*.py",hou.fileType.Any)
if file != None :
	fileOut=open(file,'w')
	fileOut.write("#############################################\n")
	fileOut.write("# generated by Hou as Code script \n")
	fileOut.write("#############################################\n")

	for objects in hou.selectedNodes() :
		fileOut.write("#############################################\n")
		fileOut.write("# from object %s \n" %(objects.name()))
		fileOut.write("#############################################\n")
		fileOut.write("%s \n" %(objects.asCode()))
		fileOut.write("#############################################\n\n")
	fileOut.close()